#!/usr/bin/env perl

use strict;
use warnings;
use 5.010;

use File::ShareDir qw(dist_file);
use Getopt::Long qw(:config no_ignore_case);
use HTML::Template;
use List::Util qw(first);
use Travel::Status::DE::DeutscheBahn;

our $VERSION = '0.00';

my ($station, @platforms);
my $template_file;
my $template;

GetOptions(

	'h|help'    => sub { show_help(0) },
	't|template=s' => \&handle_template,
	'V|version' => sub { say "db-fakedisplay version ${VERSION}"; exit 0 },

) or show_help(1);

if (@ARGV < 2) {
	show_help(1);
}

($station, @platforms) = @ARGV;
$template_file        //= dist_file('db-fakedisplay', 'single-lcd.html');
$template = HTML::Template->new( filename => $template_file);

my $status = Travel::Status::DE::DeutscheBahn->new(
	station => $station
);

my @params;

sub handle_template {
	my (undef, $template_name) = @_;

	if (-e $template_name) {
		$template_file = $template_name;
	}
	else {
		$template_file = dist_file('db-fakedisplay',
		$template_name);
	}

	return;
}

sub show_help {
	my ($exit_status) = @_;

	say 'Usage: db-fakedisplay [-t template] <station> <platforms ...>';
	say 'See also: man db-fakedisplay';

	exit $exit_status;
}

for my $platform (@platforms) {
	my $info = first { $_->platform =~ m{ ^ $platform (?: \s | $ )}x } $status->results;

	if (not defined $info) {
		push(@params, {
			platform => $platform
		});
		next;
	}

	push(@params, {
		time => $info->time,
		train => $info->train,
		via => [ map { { stop => $_ } } $info->route_interesting(3) ],
		destination => $info->destination,
		platform => (split(/ /, $info->platform))[0],
		info => $info->info,
	});
}

$template->param(
	platform => \@params,
);

say $template->output;

__END__

=head1 NAME

db-fakedisplay - Show train departures, as seen on the displays on most main stations

=head1 SYNOPSIS

B<db-fakedisplay> I<station> I<platforms ...>

=head1 VERSION

version 0.00

=head1 DESCRIPTION

B<db-fakedisplay> outputs HTML showing the next departure for every
I<platform> on I<station> on stdout.  The HTML is styled to look like the LCDs
installed on most (major) stations.

=head1 OPTIONS

=over

=item B<-t>, B<--template> B<single-lcd.html>|I<filename>

Select template.  Specify either a I<filename> or one of the templates shipped
with B<db-fakedisplay> (right now only B<single-lcd.html> is available, which
is also the default).

=item B<-V>, B<--version>

Show version information.

=back

=head1 EXIT STATUS

Zero.

=head1 CONFIGURATION

None.

=head1 DEPENDENCIES

=over

=item * File::ShareDir(3pm)

=item * HTML::Template(3pm)

=item * Travel::Status::DE::DeutscheBahn(3pm)

=back

=head1 BUGS AND LIMITATIONS

Unknown

=head1 SEE ALSO

There is some example output available at
L<http://finalrewind.org/projects/db-fakedisplay/>.

=head1 AUTHOR

Copyright (C) 2011 by Daniel Friesel E<lt>derf@finalrewind.orgE<gt>

=head1 LICENSE

  0. You just DO WHAT THE FUCK YOU WANT TO.
